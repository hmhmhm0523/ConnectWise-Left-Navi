{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","isDeviceActive","setDeviceActive","isAutomationActive","setAutomationActive","isCollapse","setCollapse","isPined","setPined","handleCollapseAllOnHover","className","onMouseEnter","onMouseLeave","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26cb7327.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './App.scss';\n\nfunction App() {\n\n  const [isDeviceActive, setDeviceActive] = useState(\"false\");\n  const [isAutomationActive, setAutomationActive] = useState(\"false\");\n  const [isCollapse, setCollapse] = useState(\"false\");\n  const [isPined, setPined] = useState(\"false\");\n\n  const handleToggleDeviceActive = () => {\n    setDeviceActive(!isDeviceActive);\n  };\n\n  const handleExpandDeviceOnHover = () => {\n    if (isCollapse) {\n      setAutomationActive(false)\n      setDeviceActive(true);\n    }\n  };\n\n  const handleExpandAutomationOnHover = () => {\n    if (isCollapse) {\n      setAutomationActive(true)\n      setDeviceActive(false);\n    }\n  };\n\n  const handleCollapseAllOnHover = () => {\n    if (isCollapse) {\n      setAutomationActive(false)\n      setDeviceActive(false);\n    }\n  }\n\n  const handleToggleAutomationActive = () => {\n    setAutomationActive(!isAutomationActive);\n  };\n\n  const handleToggleCollapse = () => {\n    setCollapse(!isCollapse);\n  };\n\n  const handleTogglePined = () => {\n    setPined(!isPined);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='header'>\n        <div className='logo'></div>\n        <div className='flexSpacer'></div>\n        <div className='profile'></div>\n      </div>\n      <div className='contentPanel'>\n        <div className={`leftNavi ${isCollapse ? \"collapsed\" : \"\"}`}\n          onMouseEnter={() => isPined ? '' : setCollapse(false)}\n          onMouseLeave={() => isPined ? '' : setCollapse(true)}>\n          <div className='topBar'>\n            <div onClick={handleToggleCollapse} className={`icon ${isCollapse ? 'rightArrow' : 'leftArrow'}`}></div>\n            <div className='flexSpacer'></div>\n            <div onClick={handleTogglePined} className={`pinButton icon ${isPined ? 'pined' : ''}`}></div>\n          </div>\n          <div className='navigationContainer'>\n            <div className='group'>\n              {/* <h4>Workspace</h4> */}\n              <div className={`level1 hasChild ${isDeviceActive ? \"expanded\" : \"\"}`}>\n                <div className='level1Item selected' onClick={handleToggleDeviceActive} onMouseEnter={handleExpandDeviceOnHover}>\n                  <div className='deviceIcon icon'></div>\n                  <span>Devices</span>\n                  <div className='chevronIcon icon'></div>\n                </div>\n                <ul className='level1Children'>\n                  <li className='level2Item selected'>Workstations & Servers</li>\n                  <li className='level2Item'>Device Groups</li>\n                </ul>\n              </div>\n              <div className={`level1 hasChild ${isAutomationActive ? \"expanded\" : \"\"}`}>\n                <div className='level1Item' onClick={handleToggleAutomationActive} onMouseEnter={handleExpandAutomationOnHover}>\n                  <div className='automationIcon icon'></div>\n                  <span>Automation</span>\n                  <div className='chevronIcon icon'></div>\n                </div>\n                <ul className='level1Children'>\n                  <li className='level2Item'>Tasks</li>\n                  <li className='level2Item'>Scheduled Tasks</li>\n                </ul>\n              </div>\n\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='alertIcon icon'></div><span>Alert Management</span></div></div>\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='reportingIcon icon'></div><span>Reporting</span></div></div>\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='integrationsIcon icon'></div><span>Integration</span></div></div>\n\n\n            </div>\n\n            <div className='group'>\n              {/* <h4>Settings</h4> */}\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='elementsIcon icon'></div><span>Elements</span></div></div>\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='packagesIcon icon'></div><span>Packages</span></div></div>\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='policiesIcon icon'></div><span>Policies</span></div></div>\n            </div>\n\n            <div className='group'>\n              {/* <h4>Classic</h4> */}\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='dashboardIcon icon'></div><span>Dashboard</span></div></div>\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='quickAccessIcon icon'></div><span>Quick Access</span></div></div>\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='patchesIcon icon'></div><span>Patches</span></div></div>\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='scriptsIcon icon'></div><span>Scripts</span></div></div>\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='reportsIcon icon'></div><span>Reports</span></div></div>\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='adminIcon icon'></div><span>Admin</span></div></div>\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='rmmSetupIcon icon'></div><span>RMM Setup</span></div></div>\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='bdrIcon icon'></div><span>BDR</span></div></div>\n              <div className='level1' ><div className='level1Item' onMouseEnter={handleCollapseAllOnHover}><div className='securityIcon icon'></div><span>Security</span></div></div>\n            </div>\n\n          </div>\n        </div>\n        <div className={`table ${isPined ? 'pined' : ''} ${isCollapse ? 'collapsed' : ''}`}>\n        </div>\n        <div className='toolbar'>\n          <div className='iconCircle'></div>\n          <div className='iconCircle'></div>\n          <div className='iconCircle'></div>\n          <div className='flexSpacer'></div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}